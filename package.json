{
  "name": "lemon-mart-server",
  "version": "1.0.0",
  "description": "Easy to learn and use full-stack TypeScript with Angular",
  "main": "index.js",
  "config": {
    "awsRegion": "us-east-1",
    "awsEcsCluster": "lemon-mart-cluster",
    "webAppGitUrl": "https://github.com/ogwaln/lemon-mart.git",
    "awsService": "lemon-mart-service"
  },
  "scripts": {
    "init:env": "init-dev-env generate-dot-env example.env -f",
    "postinstall": "npm-recursive-install --skip-root",
    "prebuild": "rimraf dist",
    "build": "tsc -p tsconfig.src.json",
    "pretest": "npm run build && npm run build:test",
    "test": "ts-node node_modules/jasmine/bin/jasmine --config=./jasmine.json",
    "prestart": "npm run build",
    "start": "env-cmd node dist/index.js",
    "stop": "docker-compose down",
    "clean": "docker-compose rm",
    "clean:all": "docker system prune --volumes",
    "start:backend": "docker-compose -f docker-compose.backend.yml up --build",
    "start:database": "docker-compose -f docker-compose.database.yml up --build",
    "publish:aws": "cross-conf-env ecs-cli compose --file docker-compose.aws.yml -p $npm_package_name -c $npm_package_config_awsEcsCluster -r $npm_package_config_awsRegion create",
    "start:docker:database": "docker run --env-file .env -d -p '27017:27017' -v '/tmp/lemon-mart-db:/data/db' duluca/minimal-mongo",
    "rimraf:node_modules": "rimraf node_modules && rimraf server/node_modules && rimraf web-app/node_modules",
    "webapp:clean": "cross-conf-env rimraf web-app && git rm -r --cached web-app",
    "webapp:init": "cross-conf-env git submodule add $npm_package_config_webAppGitUrl web-app",
    "postwebapp:init": "git submodule status web-app",
    "modules:init": "git submodule update --init --recursive",
    "modules:update": "git submodule update --force --recursive --remote",
    "aws:login:win": "cross-conf-env aws ecr get-login --no-include-email --region $npm_package_config_awsRegion > dockerLogin.cmd && call dockerLogin.cmd && del dockerLogin.cmd",
    "aws:login:mac": "eval $(aws ecr get-login --no-include-email --region $npm_package_config_awsRegion)",
    "aws:login": "run-p -cs aws:login:win aws:login:mac",
    "aws:deploy": "cross-conf-env docker run --env-file ./.env silintl/ecs-deploy -c $npm_package_config_awsEcsCluster -n $npm_package_config_awsService -i $npm_package_config_imageRepo:latest -r $npm_package_config_awsRegion --timeout 1000",
    "aws:release": "run-s -cs aws:login docker:publish aws:deploy",
    "aws:publish:compose": "cross-conf-env ecs-cli compose --file docker-compose.aws.yml -p $npm_package_name -c $npm_package_config_awsEcsCluster -r $npm_package_config_awsRegion create",
    "style": "import-sort -l \"{src,tests}/**/*.ts\" && prettier --check \"{src,tests}/**/*.ts\"",
    "style:fix": "import-sort --write \"{src,tests}/**/*.ts\" && prettier --write \"{src,tests}/**/*.ts\"",
    "lint": "tslint --config tslint.json --project .",
    "lint:fix": "tslint --config tslint.json --fix --project .",
    "prepublishOnly": "npm run test",
    "prepare": "npm run build",
    "build:test": "tsc -p tests/tsconfig.spec.json",
    "test:ci": "ts-node ./node_modules/jasmine-xml-reporter/bin/jasmine.js --config=./jasmine.json --junitreport --output=test_results/",
    "test:nyc": "nyc node_modules/ts-node/dist/bin.js node_modules/jasmine/bin/jasmine --config=./jasmine.json --cache=false"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ogwaln/lemon-mart-server.git"
  },
  "keywords": [
    "angular",
    "typescript",
    "node",
    "mongo"
  ],
  "author": "Doguhan Uluca",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/duluca/lemon-mart/issues"
  },
  "homepage": "https://github.com/duluca/lemon-mart#readme",
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@types/jasmine": "^3.6.3",
    "@types/node": "^14.14.25",
    "cross-conf-env": "^1.2.1",
    "dev-norms": "^1.7.1",
    "env-cmd": "^10.1.0",
    "import-sort": "^6.0.0",
    "import-sort-cli": "^6.0.0",
    "import-sort-parser-typescript": "^6.0.0",
    "import-sort-style-module": "^6.0.0",
    "init-dev-env": "^1.0.0",
    "jasmine": "^3.6.4",
    "jasmine-node": "^3.0.0",
    "jasmine-xml-reporter": "^1.2.1",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "prettier": "^2.2.1",
    "recursive-install": "^1.4.0",
    "rimraf": "^3.0.2",
    "source-map-support": "^0.5.19",
    "ts-node": "^9.1.1",
    "tslint": "^6.1.3",
    "tslint-config-prettier": "^1.18.0",
    "tslint-etc": "^1.13.9",
    "tslint-plugin-prettier": "^2.3.0",
    "typescript": "^3.9.7"
  },
  "dependencies": {
    "tsutils": "^3.20.0"
  },
  "importSort": {
    ".ts, .tsx": {
      "parser": "typescript",
      "style": "module",
      "options": {}
    }
  }
}
